{"version":3,"sources":["pages/Delivery/DeliveryProgress/useProgress.ts","pages/Delivery/DeliveryProgress/useResizeObserver.ts","pages/Delivery/DeliveryProgress/DeliveryProgress.tsx","store/orderStore.ts","pages/Delivery/DeliveryForm/useForm.ts","pages/Delivery/Delivery.tsx","pages/Delivery/DeliveryForm/DeliveryForm.tsx","pages/OrderCost/OrderCost.tsx","App.tsx","index.tsx"],"names":["useProgress","rowData","firstElementRef","useRef","lastActiveElementRef","wrapRef","resizeWrap","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","getBoundingClientRect","useResizeObserver","useMemo","firstRects","getClientRects","secondRects","width","item","x","Math","max","offset","data","map","v","pos","arr","disabled","progressProps","left","deliveryPoints","iconSrc","title","DeliveryProgress","className","style","src","height","alt","OrderStore","createContext","deleveryProvider","price","key","initialState","country","postcode","city","customer","address","phone","comment","shouldBeSave","provider","deliveryTabs","type","children","formState","setFormState","changeOrderPrice","useContext","handleValueChange","useCallback","value","isFormValid","Object","every","includes","delivery","find","undefined","useForm","onSubmit","e","preventDefault","console","log","htmlFor","name","onChange","target","placeholder","checked","index","onClick","Delivery","setType","Content","tab","OrderCost","App","orderPrice","setOrderPrice","Provider","values","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b42520b.chunk.js","sourcesContent":["import { useMemo, useRef } from \"react\";\r\nimport { IDeliveryPoint } from \"./DeliveryProgress\";\r\nimport { useResizeObserver } from \"./useResizeObserver\";\r\n\r\ntype PointWithRef = IDeliveryPoint & { ref?: React.MutableRefObject<HTMLDivElement> }\r\n\r\nexport const useProgress = (rowData: IDeliveryPoint[]) => {\r\n    const firstElementRef = useRef<HTMLDivElement>(null);\r\n    const lastActiveElementRef = useRef<HTMLDivElement>(null);\r\n    const wrapRef = useRef<HTMLDivElement>(null);\r\n\r\n    const resizeWrap = useResizeObserver(wrapRef);\r\n\r\n    const { width, offset } = useMemo(() => {\r\n        const firstRects = firstElementRef.current?.getClientRects();\r\n        const secondRects = lastActiveElementRef.current?.getClientRects();\r\n        if ((resizeWrap?.width ?? 0) <= 580) {\r\n            return {\r\n                width: (secondRects?.item(0)?.x ?? 0)\r\n                    - (firstRects?.item(0)?.x ?? 0)\r\n                    + Math.max((firstRects?.item(0)?.width ?? 0) / 2 - 8, 0),\r\n                offset: 0\r\n            }\r\n        }\r\n        return {\r\n            width: (secondRects?.item(0)?.x ?? 0) - (firstRects?.item(0)?.x ?? 0),\r\n            offset: Math.max((firstRects?.item(0)?.width ?? 0) / 2 - 8, 0)\r\n        }\r\n    }, [resizeWrap])\r\n\r\n\r\n    const data = rowData.map((v, pos, arr) => {\r\n        if (v.disabled) return v\r\n        if (pos === 0) return { ...v, ref: firstElementRef }\r\n        if (arr[pos + 1].disabled) return { ...v, ref: lastActiveElementRef }\r\n        return v\r\n    }) as Array<PointWithRef>\r\n\r\n    return {\r\n        data,\r\n        wrapRef,\r\n        progressProps: {\r\n            width,\r\n            left: offset\r\n        }\r\n    }\r\n};","import { RefObject, useEffect, useState } from 'react'\r\n\r\ntype Dimensions = DOMRect | undefined\r\n\r\nexport const useResizeObserver = (ref: RefObject<Element>): Dimensions => {\r\n    const [dimensions, setDimensions] = useState<Dimensions>()\r\n    useEffect(() => {\r\n        const observeTarget = ref.current\r\n        if (observeTarget === null) return\r\n\r\n        const resizeObserver = new ResizeObserver(entries => {\r\n            entries.forEach(entry => {\r\n                setDimensions(entry.contentRect)\r\n            })\r\n        })\r\n        resizeObserver.observe(observeTarget)\r\n        return () => {\r\n            resizeObserver.unobserve(observeTarget)\r\n        }\r\n    }, [ref])\r\n\r\n    return dimensions || ref.current?.getBoundingClientRect()\r\n}","import './DeliveryProgress.scss';\r\nimport { useProgress } from './useProgress';\r\n\r\nexport interface IDeliveryPoint {\r\n  iconSrc: string;\r\n  title: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst deliveryPoints: IDeliveryPoint[] = [\r\n  {\r\n    iconSrc: 'icons/home.svg',\r\n    title: 'Авторизация',\r\n  },\r\n  {\r\n    iconSrc: 'icons/box.svg',\r\n    title: 'Доставка',\r\n  },\r\n  {\r\n    iconSrc: 'icons/wallet.svg',\r\n    title: 'Оплата',\r\n    disabled: true,\r\n  },\r\n];\r\n\r\nexport const DeliveryProgress = () => {\r\n  const { data, wrapRef, progressProps } = useProgress(deliveryPoints);\r\n  return (\r\n    <div className='DeliveryProgress__bar' ref={wrapRef}>\r\n      <span className='DeliveryProgress__bar__current' style={progressProps} />\r\n      {data.map(({ iconSrc, title, disabled, ref }, pos) => (\r\n        <div className={'DeliveryProgress__point' + (disabled ? ' disabled' : '')} key={pos} ref={ref}>\r\n          <img src={iconSrc} width='24' height='24' alt={`${title}-logo`} />\r\n          <span>{title}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport interface IOrderPrice {\r\n    price?: number,\r\n    delivery?: number,\r\n    changeOrderPrice?: (value: Omit<IOrderPrice, 'changeOrderPrice'>) => void\r\n}\r\n\r\nexport const OrderStore = createContext<IOrderPrice>({});","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { OrderStore } from \"../../../store\";\r\n\r\n\r\ninterface Provider {\r\n    title: string;\r\n    price: number;\r\n    iconSrc: string;\r\n    key: string;\r\n    disabled?: boolean;\r\n}\r\nconst deleveryProvider: Provider[] = [\r\n    {\r\n        title: 'DPD Курьер',\r\n        price: 300,\r\n        key: 'dpd',\r\n        iconSrc: 'icons/dpd.svg',\r\n    },\r\n    {\r\n        title: 'СДЭК Курьер',\r\n        price: 0,\r\n        key: 'sdek',\r\n        iconSrc: 'icons/sdek.svg',\r\n    },\r\n    {\r\n        title: 'Почта россии курьер',\r\n        price: 200,\r\n        key: 'russian',\r\n        iconSrc: 'icons/russian.svg',\r\n    },\r\n];\r\n\r\ninterface IDeliveryInfo {\r\n    country: string,\r\n    postcode: string,\r\n    city: string,\r\n    customer: string,\r\n    address: string,\r\n    phone: string,\r\n    comment: string,\r\n    shouldBeSave: boolean,\r\n    provider: string,\r\n}\r\n\r\nconst initialState: IDeliveryInfo = {\r\n    country: '',\r\n    postcode: '',\r\n    city: '',\r\n    customer: '',\r\n    address: '',\r\n    phone: '',\r\n    comment: '',\r\n    shouldBeSave: true,\r\n    provider: '',\r\n}\r\n\r\nexport const useForm = () => {\r\n    const [formState, setFormState] = useState(initialState);\r\n    const { changeOrderPrice } = useContext(OrderStore);\r\n\r\n    const handleValueChange = useCallback((value: Partial<IDeliveryInfo>) => {\r\n        setFormState({ ...formState, ...value })\r\n    }, [formState]);\r\n\r\n    const isFormValid = useMemo(() => Object.entries(formState).every(\r\n        ([key, value]) => ['shouldBeSave', 'provider'].includes(key) || value\r\n    ), [formState]);\r\n\r\n    useEffect(() => {\r\n        if (isFormValid) return\r\n        setFormState(v => ({ ...v, provider: '' }))\r\n    }, [isFormValid])\r\n\r\n    useEffect(() => {\r\n        changeOrderPrice?.({\r\n            delivery: formState.provider\r\n                ? deleveryProvider.find(({ key }) => key === formState.provider)?.price\r\n                : undefined\r\n        })\r\n    }, [formState.provider])\r\n\r\n    return {\r\n        handleValueChange,\r\n        formState,\r\n        isFormValid,\r\n        deleveryProvider\r\n    };\r\n};","import { DeliveryProgress } from './DeliveryProgress';\r\nimport { DeliveryForm } from './DeliveryForm';\r\n\r\nimport './Delivery.scss';\r\nimport { useMemo, useState } from 'react';\r\n\r\nconst deliveryTabs = [\r\n  {\r\n    type: 'courier',\r\n    title: 'Курьер',\r\n    disabled: false,\r\n    children: DeliveryForm,\r\n  },\r\n  {\r\n    type: 'pickup',\r\n    title: 'Самовывоз',\r\n    disabled: true,\r\n    children: () => null,\r\n  },\r\n] as const;\r\n\r\nexport const Delivery = () => {\r\n  const [type, setType] = useState<typeof deliveryTabs[number]['type']>('courier');\r\n\r\n  const Content = useMemo(() => deliveryTabs.find((v) => v.type === type)?.children ?? (() => null), [type]);\r\n\r\n  return (\r\n    <div className='Delivery__wrap'>\r\n      <h2 className='Delivery__header'>Доставка</h2>\r\n      <DeliveryProgress />\r\n      <div>\r\n        <h4 className='Delivery__label'>тип доставки</h4>\r\n        <div className='Delivery__tabs'>\r\n          {deliveryTabs.map((tab, index) => (\r\n            <div\r\n              key={index}\r\n              onClick={() => !tab.disabled && setType(tab.type)}\r\n              className={'Delivery__tabs__item' + (tab.disabled ? ' disabled' : '')}\r\n            >\r\n              {tab.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Content />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './DeliveryForm.scss';\r\nimport { useForm } from './useForm';\r\n\r\nexport const DeliveryForm = () => {\r\n  const { formState, handleValueChange, isFormValid, deleveryProvider } = useForm();\r\n  return (\r\n    <form\r\n      className='DeliveryForm__form'\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        console.log(formState);\r\n      }}\r\n    >\r\n      <div className='DeliveryForm__form__row'>\r\n        <div className='DeliveryForm__form__item'>\r\n          <label htmlFor='country'>Страна и регион</label>\r\n          <select\r\n            name='country'\r\n            value={formState.country}\r\n            onChange={(e) => handleValueChange({ country: e.target.value })}\r\n          >\r\n            <option value='' disabled>\r\n              Выберите вашу страну и регион\r\n            </option>\r\n            <option>РФ</option>\r\n          </select>\r\n        </div>\r\n        <div className='DeliveryForm__form__item'>\r\n          <label htmlFor='postcode'>ПОЧТОВЫЙ ИНДЕКС</label>\r\n          <input\r\n            name='postcode'\r\n            placeholder='Введите ваш почтовый индекс'\r\n            value={formState.postcode}\r\n            onChange={(e) => handleValueChange({ postcode: e.target.value })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='DeliveryForm__form__row'>\r\n        <div className='DeliveryForm__form__item'>\r\n          <label htmlFor='city'>ГОРОД</label>\r\n          <input\r\n            name='city'\r\n            placeholder='Введите город'\r\n            value={formState.city}\r\n            onChange={(e) => handleValueChange({ city: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className='DeliveryForm__form__item'>\r\n          <label htmlFor='customer'>ФИО ПОЛУЧАТЕЛЯ</label>\r\n          <input\r\n            name='customer'\r\n            placeholder='Введите ФИО'\r\n            value={formState.customer}\r\n            onChange={(e) => handleValueChange({ customer: e.target.value })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='DeliveryForm__form__row'>\r\n        <div className='DeliveryForm__form__item'>\r\n          <label htmlFor='address'>Адрес</label>\r\n          <input\r\n            name='address'\r\n            placeholder='Введите улицу, дом и квартиру'\r\n            value={formState.address}\r\n            onChange={(e) => handleValueChange({ address: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className='DeliveryForm__form__item'>\r\n          <label htmlFor='phone'>ТЕЛЕФОН ПОЛУЧАТЕЛЯ</label>\r\n          <input\r\n            name='phone'\r\n            placeholder='+7 (___)-___-__-__'\r\n            value={formState.phone}\r\n            onChange={(e) => handleValueChange({ phone: e.target.value })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='DeliveryForm__form__item'>\r\n        <label htmlFor='comment'>Комментарий</label>\r\n        <textarea\r\n          name='comment'\r\n          placeholder='Введите ваш комментарий'\r\n          value={formState.comment}\r\n          onChange={(e) => handleValueChange({ comment: e.target.value })}\r\n        />\r\n      </div>\r\n      <label className='DeliveryForm__form__checkoboxItem'>\r\n        <input\r\n          type='checkbox'\r\n          name='shouldBeSave'\r\n          checked={formState.shouldBeSave}\r\n          onChange={(e) => handleValueChange({ shouldBeSave: e.target.checked })}\r\n        />\r\n        <span className='DeliveryForm__form__checkoboxItem__checkmark' />\r\n        Сохранить данные для последующих заказов\r\n      </label>\r\n      <div className='DeliveryForm__form__item'>\r\n        <label>Службы доставки</label>\r\n        <div className='DeliveryForm__form__providers'>\r\n          {deleveryProvider.map((value, index) => (\r\n            <div\r\n              key={index}\r\n              className={\r\n                'DeliveryForm__form__providers__item' +\r\n                (value.disabled || !isFormValid ? ' disabled' : value.key === formState.provider ? ' active' : '')\r\n              }\r\n              onClick={() => handleValueChange({ provider: value.key })}\r\n            >\r\n              <img src={value.iconSrc} alt={value.title + ' logo'} />\r\n              <div className='DeliveryForm__form__providers__item__info'>\r\n                <h4>{value.title}</h4>\r\n                {value.disabled || !isFormValid ? (\r\n                  <span>Сумма</span>\r\n                ) : value.price ? (\r\n                  <span>{value.price} ₽</span>\r\n                ) : (\r\n                  <span className='free'>Бесплатно</span>\r\n                )}\r\n              </div>\r\n              <div className='DeliveryForm__form__providers__item__check'></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button className='DeliveryForm__form__button' type='submit'>\r\n        Далее\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import { useContext } from 'react';\r\nimport { OrderStore } from '../../store';\r\nimport './OrderCost.scss';\r\n\r\nexport const OrderCost = () => {\r\n  const { price, delivery } = useContext(OrderStore);\r\n  return (\r\n    <div className='OrderCost__wrap'>\r\n      <h4 className='OrderCost__title'>Сумма заказа</h4>\r\n      <div className='OrderCost__items'>\r\n        <div>\r\n          <span>Подытог:</span>\r\n          <span>{price ? `${price} ₽` : '-'}</span>\r\n        </div>\r\n        <div>\r\n          <span>Доставка:</span>\r\n          {delivery ? <span>{delivery} ₽</span> : <span className='free'>Бесплатно</span>}\r\n        </div>\r\n      </div>\r\n      <div className='OrderCost__divider' />\r\n      <div className='OrderCost__result'>\r\n        <h3>Итого</h3>\r\n        <span>{(price ?? 0) + (delivery ?? 0)} ₽</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport './App.scss';\nimport { Delivery, OrderCost } from './pages';\nimport { IOrderPrice, OrderStore } from './store';\n\nfunction App() {\n  const [orderPrice, setOrderPrice] = useState<Omit<IOrderPrice, 'changeOrderPrice'>>({ price: 4800 });\n  return (\n    <OrderStore.Provider\n      value={{ ...orderPrice, changeOrderPrice: (values) => setOrderPrice({ ...orderPrice, ...values }) }}\n    >\n      <div className='layout'>\n        <Delivery />\n        <OrderCost />\n      </div>\n    </OrderStore.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}